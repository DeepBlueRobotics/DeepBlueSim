name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy: 
      fail-fast: false
      matrix:
        os: [ windows-latest, macos-latest, ubuntu-latest ]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout source
      uses: actions/checkout@v2
      with:
        submodules: "recursive"
        fetch-depth: 0

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Get Webots cache path
      id: getWebotsCachePath
      uses: DeepBlueRobotics/setup-webots@v1
      with:
        install: false
    
    - name: Cache Webots
      uses: actions/cache@v2
      with:
        path: ${{ steps.getWebotsCachePath.outputs.cachePath }}
        key: webots-v2021a-install-${{ runner.os }}


    - name: Setup Webots
      id: setupWebots
      uses: DeepBlueRobotics/setup-webots@v1

    - name: Do the system test
      uses: ./.github/actions/run-system-test

    - name: Archive the example folder
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: Resulting example project for ${{ runner.os }}
        path: example/

    - name: Archive Webots log
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: Webots log for ${{ runner.os }}
        path: webots-${{ runner.os }}.log

  publish:
    # Only release from the master branch
    if: github.ref == 'refs/heads/master'
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Get Webots cache path
      id: getWebotsCachePath
      uses: DeepBlueRobotics/setup-webots@v1
      with:
        install: false
    
    - name: Cache Webots
      uses: actions/cache@v2
      with:
        path: ${{ steps.getWebotsCachePath.outputs.cachePath }}
        key: webots-v2021a-install-${{ runner.os }}

    - name: Setup Webots
      id: setupWebots
      uses: DeepBlueRobotics/setup-webots@v1

    - name: Checkout source
      uses: actions/checkout@v2
      with:
        submodules: "recursive"
        fetch-depth: 0

    - name: Compute next semantic version
      id: version
      uses: paulhatch/semantic-version@v3.2
      with:
        branch: "master"

    - name: Tag
      run: git tag ${{ steps.version.outputs.version_tag }}
    
    - name: Push
      run: git push origin ${{ steps.version.outputs.version_tag }}

    - name: Publish to Gradle Plugin Portal
      run: ./gradlew :plugin:publishPlugins -Pversion=${{ steps.version.outputs.version }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}
