/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details take a look at the Writing Custom Plugins chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7/userguide/custom_plugins.html
 */

plugins {
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
    id 'java-gradle-plugin'

    // Support generating Maven metadata for publishing
    id 'maven-publish'

    // Support publishing to the Gradle Plugin Portal
    id 'com.gradle.plugin-publish' version '1.2.1'

    // Apply the Groovy plugin to add support for Groovy
    id 'groovy'
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}

group 'org.team199'

// Info for publishing to the Gradle Plugin Portal
gradlePlugin {
    website = 'https://github.com/DeepBlueRobotics/DeepBlueSim'
    vcsUrl = 'https://github.com/DeepBlueRobotics/DeepBlueSim.git'
    // Define the plugin
    plugins {
        deepbluesim {
            id = 'org.team199.deepbluesim'
            displayName = 'DeepBlueSim Plugin'
            description = 'A plugin that simplifies developing WPILib projects that use Webots for simulation.'
            implementationClass = 'org.team199.deepbluesim.gradle.DeepBlueSimPlugin'
            tags.set(['FRC', 'WPILib', 'Webots'])
        }
    }
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

tasks.withType(Test).configureEach {
    // Using JUnitPlatform for running tests
    useJUnitPlatform()
}

tasks.named('check') {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}

configurations {
    // configuration that holds files to include as resources
    extraFiles
}

dependencies {
    // Use the awesome Spock testing and specification framework
    testImplementation platform("org.spockframework:spock-bom:2.2-groovy-3.0")
    testImplementation 'org.spockframework:spock-core'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    
    implementation 'commons-io:commons-io:2.8.0'
    implementation 'edu.wpi.first:GradleRIO:2024.3.1'
    // include the Webots.zip artifact produced by the controller's webotsFolder configuration
    extraFiles project(path: ':controller', configuration: 'webotsFolder')
}

// Copy the extra files (namely Webots.zip) into the the jar
processResources {
    into('org/team199/deepbluesim/gradle') {
        from configurations.extraFiles
    }
}

// Support publishing locally so that we can test before publishing to the gradle plugin portal
publishing {
    repositories {
        maven {
            name = 'localPluginRepository'
            url = 'build/local-plugin-repository'
        }
    }
}

