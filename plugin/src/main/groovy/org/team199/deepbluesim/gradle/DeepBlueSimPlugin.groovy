/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package org.team199.deepbluesim.gradle

import org.gradle.api.Project
import org.gradle.api.Plugin

import org.apache.commons.io.FileUtils
import org.apache.commons.io.IOUtils

/**
 * A simple 'hello world' plugin.
 */
class DeepBlueSimPlugin implements Plugin<Project> {
    void apply(Project project) {
        def installDeepBlueSim = project.tasks.register("installDeepBlueSim") {
            doLast {
                new URLConnection(new URL("file:///")) {
                {
                    setDefaultUseCaches(false)
                }
                    @Override
                void connect() throws IOException {
                    }
                }
                def resourceURLString = getClass().getProtectionDomain().getCodeSource().getLocation().toExternalForm();
                System.out.println("resourceURLString = " + resourceURLString);
                def resourceStream = DeepBlueSimPlugin.class.getResourceAsStream("/Webots.zip")
                // def resourceStream = DeepBlueSimPlugin.class.getResourceAsStream(resourceURLString+"/org/team199/deepbluesim/gradle/Webots.zip")
                // def resourceStream = DeepBlueSimPlugin.classLoader.getResourceAsStream("/org/team199/deepbluesim/gradle/Webots.zip")
                if (resourceStream == null) throw new RuntimeException("resourceStream is null")
                def dbsDir = new File(project.buildDir, "tmp/deepbluesim")
                dbsDir.mkdirs()
                FileUtils.copyInputStreamToFile(resourceStream, new File(dbsDir,"Webots.zip"))
                project.copy {
                    from project.zipTree(new File(dbsDir,"Webots.zip"))
                    into project.projectDir
                }
            }
        }
        project.tasks.matching({ task -> 
            (task.name.toLowerCase().contains("simulate"))
        }).all { GroovyObject t -> 
            t.dependsOn(installDeepBlueSim)
        }
    }
}
