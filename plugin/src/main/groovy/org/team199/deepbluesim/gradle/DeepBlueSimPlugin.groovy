/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package org.team199.deepbluesim.gradle

import org.gradle.api.Project
import org.gradle.api.Plugin
import org.gradle.api.Task
import org.gradle.internal.os.OperatingSystem

import org.apache.commons.io.FileUtils
import org.apache.commons.io.IOUtils

import edu.wpi.first.gradlerio.simulation.JavaSimulationTask;
import edu.wpi.first.gradlerio.simulation.JavaExternalSimulationTask;
import edu.wpi.first.gradlerio.simulation.NativeSimulationTask;
import edu.wpi.first.gradlerio.simulation.NativeExternalSimulationTask;

import java.nio.file.Files
import java.nio.file.Paths

/**
 * A plugin that allows FRC robots to be simulated in the Webots simulator.
 */
class DeepBlueSimPlugin implements Plugin<Project> {
    void apply(Project project) {
        project.pluginManager.withPlugin('edu.wpi.first.GradleRIO') {
            def installDeepBlueSim = project.tasks.register("installDeepBlueSim") {
                doLast {
                    def resourceStream = DeepBlueSimPlugin.class.getResourceAsStream("Webots.zip")
                    if (resourceStream == null) throw new RuntimeException("resourceStream is null")
                    def dbsDir = new File(project.buildDir, "tmp/deepbluesim")
                    dbsDir.mkdirs()

                    // Java IO cannot open files with the hidden attribute set on Windows (JDK-8047342)
                    // This capability is needed to overwrite the files loaded from the zip (if they exist)
                    // Webots automatically sets the hidden attribute on the .wbproj file
                    // so the task will fail unless we remove it
                    if(OperatingSystem.current().isWindows()) {
                        def wbprojPath = Paths.get(project.projectDir.getAbsolutePath(), "Webots", "worlds", ".DBSExample.wbproj")
                        if(Files.exists(wbprojPath)) {
                            Files.setAttribute(wbprojPath, "dos:hidden", false)
                        }
                    }

                    def extractedZipFile = new File(dbsDir, "Webots.zip")
                    FileUtils.copyInputStreamToFile(resourceStream, extractedZipFile)
                    project.copy {
                        from project.zipTree(extractedZipFile)
                        into project.projectDir
                    }
                }
            }
            [JavaSimulationTask, JavaExternalSimulationTask, NativeSimulationTask, NativeExternalSimulationTask].each { cls ->
                project.tasks.withType(cls) { task ->
                    task.dependsOn(installDeepBlueSim)
                }
            }
            project.extensions.create('deepbluesim', DeepBlueSimExtension, project.wpi)
        }
    }
}
