/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package org.carlmontrobotics.deepbluesim.gradle

import org.gradle.api.Project
import org.gradle.api.Plugin
import org.gradle.api.Task
import org.gradle.internal.os.OperatingSystem

import org.apache.commons.io.FileUtils
import org.apache.commons.io.IOUtils

import edu.wpi.first.gradlerio.simulation.JavaSimulationTask;
import edu.wpi.first.gradlerio.simulation.JavaExternalSimulationTask;
import edu.wpi.first.gradlerio.simulation.NativeSimulationTask;
import edu.wpi.first.gradlerio.simulation.NativeExternalSimulationTask;

import java.nio.file.Files
import java.nio.file.Paths

/**
 * A plugin that allows FRC robots to be simulated in the Webots simulator.
 */
class DeepBlueSimPlugin implements Plugin<Project> {
    void apply(Project project) {
        project.pluginManager.withPlugin('edu.wpi.first.GradleRIO') {
            def installDeepBlueSim = project.tasks.register("installDeepBlueSim") {
                doLast {
                    // Java IO cannot open files with the hidden attribute set on Windows (JDK-8047342)
                    // This capability is needed to overwrite the files loaded from the zip (if they exist)
                    // Webots automatically sets the hidden attribute on the .wbproj file
                    // so the task will fail unless we remove it
                    if(OperatingSystem.current().isWindows()) {
                        Files.walk(Paths.get(project.projectDir.getAbsolutePath(), "Webots", "worlds"))
                            .filter(Files::isRegularFile)
                            .filter(file -> {
                                def splitFilePath = file.toString().split("\\.");
                                return splitFilePath.length > 0 && splitFilePath[splitFilePath.length-1].equals("wbproj");
                            })
                            .forEach(file -> Files.setAttribute(file, "dos:hidden", false));
                    }

                    def dbsDir = new File(project.buildDir, "tmp/deepbluesim")
                    dbsDir.mkdirs()

                    extractResource(project, dbsDir, "Webots.zip")
                    extractResource(project, dbsDir, "libdeepbluesim.zip")
                }
            }
            [JavaSimulationTask, JavaExternalSimulationTask, NativeSimulationTask, NativeExternalSimulationTask].each { cls ->
                project.tasks.withType(cls) { task ->
                    task.dependsOn(installDeepBlueSim)
                }
            }
            project.extensions.create('deepbluesim', DeepBlueSimExtension, project.wpi)
        }
    }

    void extractResource(Project project, File dbsDir, String resourceZip) {
        def resourceStream = DeepBlueSimPlugin.class.getResourceAsStream(resourceZip)
        if (resourceStream == null) throw new RuntimeException("resourceStream is null")

        def extractedZipFile = new File(dbsDir, resourceZip)
        FileUtils.copyInputStreamToFile(resourceStream, extractedZipFile)
        project.copy {
            from project.zipTree(extractedZipFile)
            into project.projectDir
        }
    }
}
